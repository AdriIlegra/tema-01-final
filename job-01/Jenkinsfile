pipeline {

    agent any

    environment {
        CI = 'true'
        ARTFACTORY_ACCESS_TOKEN = credentials('artfactory-access-token')
    }

    stages {

        stage('Connect to Git Repository') {
            steps {
                git branch: 'main', url: "https://github.com/AdriIlegra/tema-01-final"
            }
        }

        stage('Gradle clean') {
            steps {
                sh './gradlew clean'
            }
        }

        stage('Gradle test') {
            steps {
                sh './gradlew test'
            }
        }

        stage('Gradle build') {
            steps {
                sh './gradlew build'
            }
        }

        stage('Upload Artifact in JFrog') {
            steps {
                rtUpload (
                    serverId: "Calculadora",
                    spec: """{
                                "files": [
                                    {
                                        "pattern": "build/libs/tema-04.jar",
                                        "target": "Calculadora"
                                    }
                                ]
                    }"""
                )
            }
        }

        stage('Download Artifact in JFrog') {
            steps {
                rtDownload (
                    serverId: "Calculadora",
                    spec: """{
                                "files": [
                                    {
                                        "pattern": "Calculadora/tema-04.jar",
                                        "target": "build/libs/"
                                    }
                                ]
                    }
                )
            }
pipeline {
    agent any

    environment {
        CI = 'true'

        ARTIFACTORY_ACCESS_TOKEN = credentials('artfactory-access-token') // Substitua pelo ID da credencial de acesso ao Artifactory
    }

    stages {
        stage('Connect to Git Repository') {
            steps {
                script {
                    def scmVars = checkout scm
                }
            }
        }

        stage('Gradle clean') {
            steps {
                sh './gradlew clean'
            }
        }

        stage('Gradle test') {
            steps {
                sh './gradlew test'
            }
        }

        stage('Gradle build') {
            steps {
                sh './gradlew build'
            }
        }

        stage('Upload Artifact to JFrog') {
            steps {
                script {
                    def server = Artifactory.server ARTIFACTORY_SERVER_ID
                    def uploadSpec = """{
                        "files": [
                            {
                                "pattern": "build/libs/tema-04.jar",
                                "target": "Calculadora"
                            }
                        ]
                    }"""
                    server.upload uploadSpec
                }
            }
        }

        stage('Download Artifact from JFrog') {
            steps {
                script {
                    def server = Artifactory.server ARTIFACTORY_SERVER_ID
                    def downloadSpec = """{
                        "files": [
                            {
                                "pattern": "Calculadora/tema-04.jar",
                                "target": "build/libs/"
                            }
                        ]
                    }"""
                    server.download downloadSpec
                }
            }
        }
    }

    post {
        success {

            // Fa√ßa algo quando o pipeline for bem sucedido
            script {
                def server = Artifactory.server ARTIFACTORY_SERVER_ID
                def promotionConfig = [
                    'buildName': env.JOB_NAME,
                    'buildNumber': env.BUILD_NUMBER,
                    'targetRepo': 'libs-release-local',
                    'sourceRepo': 'libs-snapshot-local'
                ]
                server.promote promotionConfig
        }
        }
        failure {


        }
    }
}
